Algorithm:
// It returns false if n is composite and returns true if n
// is probably prime.  k is an input parameter that determines
// accuracy level. Higher value of k indicates more accuracy.
bool isPrime(int n, int k)
1) Handle base cases for n < 3
2) If n is even, return false.
3) Find an odd number d such that n-1 can be written as d*2r. 
   Note that since n is odd, (n-1) must be even and r must be 
   greater than 0.
4) Do following k times
     if (millerTest(n, d) == false)
          return false
5) Return true.

// This function is called for all k trials. It returns 
// false if n is composite and returns true if n is probably
// prime.  
// d is an odd number such that d*2r = n-1 for some r>=1
bool millerTest(int n, int d)
1) Pick a random number 'a' in range [2, n-2]
2) Compute: x = pow(a, d) % n
3) If x == 1 or x == n-1, return true.

// Below loop mainly runs 'r-1' times.
4) Do following while d doesn't become n-1.
     a) x = (x*x) % n.
     b) If (x == 1) return false.
     c) If (x == n-1) return true.



 History of Miller Rabin Primality Test
Miller-Rabin primality test was named,when Michael Rabin discovered a ran-
domized polynomial-time algorithm in 1980 to test whether a number is prime,
which was closely related to a deterministic algorithm studied by Gary Miller
in 1976. Miller Rabin is relatively simple extension of Fermats littleTheorem
that allows us to test for primality with a much higher probability than Fermats
little theorem..This is still the most practical known primality test algorithm

 History of Euler's Totient[Phi function]
Leonhard Euler introduced the function in 1763. However, he did not at that time choose any specific symbol to denote it. In a 1784 publication, Euler studied the function further, choosing the Greek letter π to denote it: he wrote πD for "the multitude of numbers less than D, and which have no common divisor with it".[10] This definition varies from the current definition for the totient function at D = 1 but is otherwise the same. The now-standard notation[8][11] φ(A) comes from Gauss's 1801 treatise Disquisitiones Arithmeticae,although Gauss didn't use parentheses around the argument and wrote φA. Thus, it is often called Euler's phi function or simply the phi function.
In 1879, J. J. Sylvester coined the term totient for this function, so it is also referred to as Euler's totient function, the Euler totient, or Euler's totient. Jordan's totient is a generalization of Euler's.
The cototient of n is defined as n − φ(n). It counts the number of positive integers less than or equal to n that have at least one prime factor in common with n. 
